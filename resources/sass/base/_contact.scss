#chat-messages {
  > * {
    @apply pb-4;
  }
}

.message {
  word-wrap: break-word;
  @apply relative px-3 py-2 rounded-xl text-sm leading-loose;
  animation: messageReceive 0.6s cubic-bezier(0.2, 0.8, 0.2, 1);

  &.editable {
    min-width: 4rem;
  }

  &.typing {
    animation: typingBubbleClear 1.75s forwards;

    p {
      font-size: 1.75rem;
      line-height: 0.75;
      @apply text-grey-600;
    }

    span {
      display: inline-block;
      animation: typingDots 1s infinite linear;
    }

    @for $i from 1 to 3 {
      span:nth-child(#{$i}) {
        animation-delay: $i * -0.33s;
      }
    }
  }
}

.fromThem {
  max-width: 80%;

  .message {
    @apply bg-grey-200 text-grey-800;

    &::before {
      content: "";
      position: absolute;
      z-index: 1;
      bottom: -2px;
      left: 0;
      height: 50%;
      border-left: 10px solid theme("colors.grey.200");
      border-bottom-right-radius: 16px 14px;
      transform: translate(0, -2px);
    }
  }
}

.fromMe {
  @apply self-end;
  max-width: 80%;

  .message {
    @apply bg-blue-500 text-always-white relative;

    &:hover,
    &:focus {
      div {
        @apply opacity-100 visible translate-x-0;
      }
    }

    &.editable {
      @apply shadow-inset bg-black-100 text-grey-800;

      &:before {
        opacity: 0;
      }

      p:focus {
        @apply shadow-none;
      }

      div {
        @apply opacity-100 visible translate-x-0;
      }
    }

    &::before {
      content: "";
      position: absolute;
      z-index: 1;
      bottom: -2px;
      right: 0;
      height: 50%;
      border-right: 10px solid theme("colors.blue.500");
      border-bottom-left-radius: 16px 14px;
      transform: translate(0, -2px);
    }

    div {
      right: calc(100% - 0.5rem);
      @apply absolute ease-smooth top-0 h-full flex items-center duration-300 transition opacity-0 transform translate-x-1 p-2 pr-4 invisible;

      button {
        @apply bg-grey-900 rounded text-white font-mono text-xxs leading-none uppercase cursor-pointer tracking-wide p-2;
      }
    }
  }
}

.typingDots {
  margin-top: auto;
}

#chat-controls {
  textarea::placeholder {
    @apply text-black-500;
  }

  &.pointer-events-none {
    textarea::placeholder {
      @apply text-black-300;
    }
  }
}

#nextButton {
  &.animating {
    @apply bg-blue-100;
    animation: next-button-animation 0.45s ease-in-out;

    svg {
      fill: theme("colors.blue.500");
    }

    @keyframes next-button-animation {
      0%,
      100% {
        transform: scale(1);
      }

      25% {
        transform: scale(1.2);
      }

      50% {
        transform: scale(0.95);
      }
    }
  }
}

#next-button-wrapper {
  &.disabled {
    pointer-events: none;
  }

  &:not(.disabled) {
    svg {
      fill: theme("colors.blue.500");
    }
  }
}

#chat-window {
  &[data-state="yourName"] {
    #form-input-name {
      display: block;
    }

    #form-input- {
      &message,
      &email,
      &empty {
        display: none;
      }
    }
  }

  &[data-state="yourMessage"] {
    #form-input-message {
      display: block;
    }

    #form-input- {
      &name,
      &email,
      &empty {
        display: none;
      }
    }
  }

  &[data-state="yourEmail"] {
    #form-input-email {
      display: block;
    }

    #form-input- {
      &name,
      &message,
      &empty {
        display: none;
      }
    }
  }

  &[data-state="confirm"],
  &[data-state="submitted"] {
    #form-input-empty {
      display: block;
    }

    #form-input- {
      &name,
      &message,
      &email {
        display: none;
      }
    }

    #chat-controls {
      pointer-events: none;
    }
  }
}

.input-sizer {
  position: relative;
  max-height: 200px;
  overflow-y: auto;
  align-items: stretch;

  &::after,
  textarea,
  input {
    width: 100%;
    min-height: 38px;
    font-size: 14px;
    height: auto;
    grid-area: 2 / 1;
    resize: none;
    background: none;
    appearance: none;
    border: none;
    word-wrap: break-word;
    padding-top: 9px;
    @apply leading-loose;
    overflow-y: hidden;
  }

  &::after {
    content: attr(data-value) " ";
    visibility: hidden;
    white-space: pre-wrap;
    padding: 0.25rem 0.75rem 0.5rem;
  }
}

.group:focus-within {
  .button-wrapper {
    @apply visible opacity-100;
  }
}
